public class Main {
    public static void main(String[] args) {
        Handler auth = new AuthorizationHandler();
        Handler role = new RoleCheckHandler();
        Handler access = new AccessHandler();

        auth.setNext(role).setNext(access);

        System.out.println("=== 1. –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –∑–∞–ø—Ä–æ—Å ===");
        auth.handle("auth admin");

        System.out.println("\n=== 2. –ë–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ ===");
        auth.handle("admin");

        System.out.println("\n=== 3. –ë–µ–∑ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ ===");
        auth.handle("auth user");
    }
}

// –ê–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
abstract class Handler {
    protected Handler next;

    public Handler setNext(Handler next) {
        this.next = next;
        return next;
    }

    public abstract void handle(String request);
}

// –ü–µ—Ä–≤—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫: –ø—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
class AuthorizationHandler extends Handler {
    public void handle(String request) {
        if (request.contains("auth")) {
            System.out.println("‚úî Authorization passed");
            if (next != null) next.handle(request);
        } else {
            System.out.println("‚ùå Authorization failed");
        }
    }
}

// –í—Ç–æ—Ä–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫: –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–æ–ª–∏
class RoleCheckHandler extends Handler {
    public void handle(String request) {
        if (request.contains("admin")) {
            System.out.println("‚úî Role check passed");
            if (next != null) next.handle(request);
        } else {
            System.out.println("‚ùå Access denied: insufficient role");
        }
    }
}

// –§–∏–Ω–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫: –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–∞
class AccessHandler extends Handler {
    public void handle(String request) {
        System.out.println("üîì Access granted to secure resource");
    }
}
